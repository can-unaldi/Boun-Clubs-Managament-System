// <auto-generated />
using BounClubs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BounClubs.Migrations.ApplicationOtherDb
{
    [DbContext(typeof(ApplicationOtherDbContext))]
    partial class ApplicationOtherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BounClubs.Models.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClubAdvisorUserName");

                    b.Property<string>("ClubDescription");

                    b.Property<string>("ClubLogo");

                    b.Property<string>("ClubMail");

                    b.Property<string>("ClubName");

                    b.Property<string>("ClubUserName");

                    b.Property<string>("ClubWebSite");

                    b.HasKey("ClubId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("BounClubs.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvisorApproval");

                    b.Property<string>("ClubId");

                    b.Property<string>("ClubName");

                    b.Property<int>("DeanAproval");

                    b.Property<string>("EndDate");

                    b.Property<string>("EventDescription");

                    b.Property<string>("EventName");

                    b.Property<int>("KakApproval");

                    b.Property<bool>("Media");

                    b.Property<int>("ParticipantCount");

                    b.Property<string>("Place");

                    b.Property<int>("ReservationApproval");

                    b.Property<bool>("Revenue");

                    b.Property<string>("Speaker");

                    b.Property<string>("StartDate");

                    b.Property<string>("Type");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
